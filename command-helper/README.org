#+TITLE: Command Helper
* Intro
** ¿Qué es?
   - programa sencillo sin tantas dependencias, similar al comando ~man~ para documentar comandos
   - describe los comandos más utiles en un archivo ~.sh~
   - describe los atajos más comunes en un archivo ~.org~
   - accede desde una terminal de forma global con el símbolo ~?~
** ¿Por qué lo utilizo?
   - no utilizar ciertos comandos por un tiempo, implíca olvidarse de como usarlos y sus parámetros
   - evitar perder tiempo leyendo ~man comando~ que tiene tantas opciones avanzadas en vez una explicación simple
* Ejemplo
  #+BEGIN_SRC shell
    # imprimirá un menú de ayuda, opciones de instalación, etc..
    ? help

    # leerá las entradas documentadas del comando ls
    # con los usos más comunes que hayas escrito
    ? ls

    # leerá las entradas del archivo doc/linux-shell/commands/screen.sh y también doc/linux-shell/shortcuts/screen.org (si los tuviera)
    ? screen
  #+END_SRC
* Instalación y Desinstalación
  #+BEGIN_SRC shell
    # se agregará un alias de bash del directorio actual en ~/.bash_aliases
    # que te permitirá ejecutar el programa en la terminal usando sólo el símbolo de interrogación
    make install

    # para desinstalar
    # eliminará el código de ~/.bash_aliases y también el alias vinculada a la shell
    make remove
  #+END_SRC
* Configuración
  #+BEGIN_QUOTE
  La configuración para documentar un nuevo comando de la terminal de linux es mínima
  1. Creamos el archivo con el nombre del comando a documentar en el directorio ~doc/linux-shell/commands/~ con la extensión ~.sh~
  2. También podemos crear una tabla de los shortcuts del comando en ~doc/linux-shell/shortcuts/~ con la extensión ~.org~
  3. Listo! podemos reutilizar los archivos creados como template

  Documentar comandos de aplicaciones es lo mismo, pero usamos el directorio ~doc/applications/commands~ y ~doc/applications/shortcuts/~
  #+END_QUOTE
